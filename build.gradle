import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'com.modrinth.minotaur' version '2.+' apply false
    id 'net.darkhax.curseforgegradle' version '1.+' apply false
}

interface PlatformInfoExtension {
    Property<String> getPlatform();
    ListProperty<String> getVersionsForCurseForgeAndModrinth();
    Property<String> getSupportedVersions();
}

subprojects { Project p ->
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'com.modrinth.minotaur' // https://stackoverflow.com/a/50153617
    apply plugin: 'net.darkhax.curseforgegradle'

    p.extensions.create('platformInfo', PlatformInfoExtension)

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    p.archivesBaseName = "FastEntityTransfer"
    p.version = project.version

    p.tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
    }

    p.processResources {
        // Exclude .cache directory which is generated by DataGen.
        exclude '.cache'
    }

    p.afterEvaluate { Project pAfter ->

        if (!pAfter.name.endsWith('common')) {
            String baseProject = ':' + pAfter.name.substring(0, pAfter.name.indexOf('-')) + '-common'
            pAfter.compileJava {
                source(pAfter.project(baseProject).sourceSets.main.allSource)
            }
            pAfter.processResources {
                from project(baseProject).sourceSets.main.resources
            }
        }

        def projectExt = pAfter.extensions.platformInfo as PlatformInfoExtension

        pAfter.archivesBaseName = "${mod_id}-${projectExt.platform.get().toLowerCase()}-${projectExt.supportedVersions.get()}"

        pAfter.modrinth {
            try {
                token = file('../../API Tokens/modrinth.md').text
            } catch (Exception ignored) {
                token = ""
            }
            projectId = "${modrinth_id}"
            loaders = [ projectExt.platform.get().toLowerCase(Locale.ROOT) ]
            gameVersions = projectExt.versionsForCurseForgeAndModrinth.getOrElse([])
            uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")
            versionNumber = project.version
            versionType = "${release_type}"
        }
        if ("Vanilla" == projectExt.platform.get()) {
            // Disable modrinth task for common sub-projects
            pAfter.tasks.named("modrinth") {
                enabled = false
            }
        } else {
            pAfter.tasks.register('publishCurseForge', TaskPublishCurseForge) {
                group = 'publishing'
                disableVersionDetection()
                apiToken = file('../../API Tokens/fastentitytransfer.md') != null ? file('../../API Tokens/fastentitytransfer.md') : ""
                def projectId = "${cf_id}".toString()
                def mainFile = upload(projectId, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
                mainFile.changelogType = 'markdown'
                mainFile.changelog = file('changelog.md')
                mainFile.addGameVersion('Client', 'Server')
                mainFile.addModLoader(projectExt.platform.get())
                projectExt.versionsForCurseForgeAndModrinth.getOrElse([]).each {
                    mainFile.addGameVersion(it)
                }
                mainFile.releaseType = 'release'
                mainFile.changelog = 'Bug fixes'
            }
        }
    }

}
